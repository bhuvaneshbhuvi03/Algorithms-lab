# -*- coding: utf-8 -*-
"""binary_search.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sOOYMHoQ5ZVyMXkdCUbOM-amYEMe-Gf6
"""

import random
import time
import matplotlib.pyplot as plt

def binary_search(arr, target):
    low, high = 0, len(arr) - 1
    while low <= high:
        mid = (low + high) // 2
        if arr[mid] == target:
            return mid
        elif arr[mid] < target:
            low = mid + 1
        else:
            high = mid - 1
    return -1

sizes = [100, 200, 400, 800, 1600, 3200]
binary_times = []

for size in sizes:
    arr = random.sample(range(1, size*10), size)
    arr_sorted = sorted(arr)
    start_time = time.time()
    binary_search(arr_sorted, arr[random.randint(0, size-1)])
    binary_times.append(time.time() - start_time)

plt.figure(figsize=(10, 6))
plt.plot(sizes, binary_times, label="Binary Search (O(log n))", marker='o')
plt.xlabel("Input Size")
plt.ylabel("Time (seconds)")
plt.title("Binary Search Time Complexity")
plt.legend()
plt.grid(True)
plt.show()